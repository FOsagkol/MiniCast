name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
      # 1) Kaynak kodu al
      - name: Checkout
        uses: actions/checkout@v4

      # 2) JDK 17 (AGP 8.x + Gradle 8.7 için)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # 3) Android SDK cmdline-tools (lisans kabulünü burada kapatıyoruz!)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: false
          log-accepted-android-sdk-licenses: false
          cmdline-tools-version: 12266719
          packages: tools platform-tools

      # 4) Lisansları non-interactive kabul et
      - name: Accept Android SDK licenses (non-interactive)
        run: |
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" \
            --licenses --sdk_root="${ANDROID_SDK_ROOT}"

      # 5) Gerekli paketleri kur (compile/target 34 ile uyumlu)
      - name: Install required Android packages
        run: |
          "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      # (Opsiyonel teşhis - bırakmak isterseniz dursun)
      - name: List menu XML files (diagnostic)
        run: |
          echo "Listing files matching menu*.xml under res:"
          find app/src/main/res -type f -name "menu*.xml" -print || true
          echo "Res/menu tree (if exists):"
          (ls -la app/src/main/res/menu || true)

      # 6) Gradle wrapper doğrulama + çalıştırılabilir yap
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      # 7) Gradle cache (read-only yaparak cache servisindeki geçici uyarıları azaltıyoruz)
      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: true

      # 8) Derleme (ayrıntılı log)
      - name: Build debug APK
        run: ./gradlew --no-daemon clean assembleDebug --stacktrace --info --warning-mode all

      # 9) APK artefaktını yükle
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error
